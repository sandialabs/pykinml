Scripts for training and running models.


sample_tvt.txt:
File holding the training/validation/testing (tvt) mask of the dataset for the train_single_fid and train_multi_node examples.


mf_tvt.txt:
File holding the training/validation/testing (tvt) mask of the dataset for the train_delta and train_multi_fid examples.

train_single_fid:
train a model. Can be done using DDP on gpus or without DDP on cpus. Before the training loop begins the model and data are prepared.
Your expected output should look similar to out.train_single_fid. Note that the exact numbers may vary on different machines/operating systems
but it should always contain a summary of the data preparation/loading steps and a summary of the model.

run_model:
used the model trained by train_single_fid to predict the energy/forces on a molecule generated with ase
When the model is loaded, it should print out the list of activation functions being used. Expected output for this example is:
"activation functions: ['gaussian', 'gaussian', 'gaussian', 'identity']"
Followed by the energy and forces predicted by the model.

load_model:
loads the model trained with train_single_fid and continues training.
Your expected output should look similar to out.load_model. Note that the exact numbers may vary on different machines/operating systems
but it should always contain a summary of the data preparation/loading steps and a summary of the model.


train_multi_fid.py:
same as train_single_fid ony the model is now trained with multiple fidelity levels. The output here should look similar to train_single_fid, but many parts will appear twice (once for each fidelity level). 
Also, this example also is set to use force training and therefore will also print the force loss each epoch. This example uses a smaller network and dataset than the previus examples to expediate results with force training.
Your expected output should look similar to out.train_multi_fid. Note that the exact numbers may vary on different machines/operating systems
but it should always contain a summary of the data preparation/loading steps and a summary of the model.

train_multi_node:
same as train_single_fid but runs on multiple nodes. For Slurm submission.
The data preperation/loading and model setup steps will look the same as is seen in out.train_single_fid but each GPU will print it's own output.

train_delta:
train a model to predict the difference between two fidelity levels.
Your expected output should look similar to out.train_delta. Note that the exact numbers may vary on different machines/operating systems
but it should always contain a summary of the data preparation/loading steps and a summary of the model.

